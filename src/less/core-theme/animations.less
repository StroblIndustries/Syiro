@import (reference) "../core.less"; // Import Core as a reference

// #region Animation Parametric Mixin - Allows easy adding of animations

.animate(@properties; @duration : 250){

	// #region When the animation is active

	&:not([data-syiro-render-animation="false"]){ // If we are not "overriding" Animation by setting render-animation to false
		transition: e(@properties) unit(@duration, ms); // String escape the provided properties that'll change in transform
		-webkit-transition: e(@properties) unit(@duration, ms); // Same as above, just specific to Webkit
	}

	// #endregion
}

// #endregion

// #region Fading

&[data-syiro-animation="fade-in"]{ // Fade In Animation
	transform: opacity, visibility;
	-ms-transform: opacity, visibility;
	-webkit-transform: opacity, visibility;

	transition-duration: 125ms;
	-webkit-transition-duration: 125ms;

	transition-timing-function: ease-in;
	-webkit-transition-timing-function: ease-in;

	opacity: 1 !important;
	visibility: visible !important;
}

&[data-syiro-animation="fade-out"]{ // Fade Out Animation
	transform: opacity, visibility;
	-ms-transform: opacity, visibility;
	-webkit-transform: opacity, visibility;

	transition-duration: 125ms;
	-webkit-transition-duration: 125ms;

	transition-timing-function: ease-in;
	-webkit-transition-timing-function: ease-in;

	opacity: 0 !important;
	visibility: hidden !important;
}

// #endregion

// #region Flip Mixin

.flip(){
	transform: rotate(180deg); // Rotate by 180 degrees
	-moz-transform: rotate(180deg);
	-ms-transform: rotate(180deg);
	-o-transform: rotate(180deg);
	-webkit-transform: rotate(180deg);
}

// #region Sliding Mixin
// Returns properties that are used with the parent went the parent has [data-syiro-animation="slide"]

.slide(@pos; @milliseconds){ // Default slide using translateX

	.animate("transform", @milliseconds);

	&[data-syiro-animation="slide"]{
		transform: translateX(@pos); // Set translateX to @pos, where pos can be px, e(calc()), etc.
		-webkit-transform: translateX(@pos); // WebKit Equivelant
	}
}

.slideLeft(@pos; @milliseconds){ // SlideLeft using left attribute instead of transform+translateX
	.animate("left", @milliseconds);

	&[data-syiro-animation="slide"]{
		left: e(@pos); // Set left to @pos, where pos can be px, e(calc()), etc.
	}
}

// #endregion

// #endregion Pulse


.pulse(){
	box-shadow: 0 0 0 0 fadeout(@syiroPrimaryColor, 25%); // No box-shadow
	transition: box-shadow 500ms; // Set transition value of box-shadow

	&:hover{
		box-shadow: 0 0 3px 3px fadeout(@syiroPrimaryColor, 25%); // Box shadow (lighten shadow by 20%)
	}
}

// #endregion
